"""
intro
在Excel中，用A表示第一列，B表示第二列。。。Z表示第26列，AA表示第27列，AB表示第28列。。。以此类推。
请写出一个函数，输入用字母表示的列号编码，输出它是第几列

"""


def toNum(colCode: str) -> int:
    dic = {"A": 1, "B": 2, "C": 3, "D": 4, "E": 5, "F": 6,
           "G": 7, "H": 8, "I": 9, "J": 10, "K": 11, "L": 12,
           "M": 13, "N": 14, "O": 15, "P": 16, "Q": 17, "R": 18,
           "S": 19, "T": 20, "U": 21, "V": 22, "W": 23, "X": 24,
           "Y": 25, "Z": 26}
    num = 0
    for c in colCode:
        num *= 26
        num += dic[c]
    return num


print(toNum("ABC"))


"""
剑指 Offer 15. 二进制中1的个数
请实现一个函数，输入一个整数，输出该数二进制表示中 1 的个数。
例如，把 9 表示成二进制是 1001，有 2 位是 1。因此，如果输入 9，则该函数输出 2。

示例 1：
输入：00000000000000000000000000001011
输出：3
解释：输入的二进制串 00000000000000000000000000001011 中，共有三位为 '1'。

示例 2：
输入：00000000000000000000000010000000
输出：1
解释：输入的二进制串 00000000000000000000000010000000 中，共有一位为 '1'。

示例 3：
输入：11111111111111111111111111111101
输出：31
解释：输入的二进制串 11111111111111111111111111111101 中，共有 31 位为 '1'。

date : 11-9-2020
"""

# print(bin(4))

class Solution:
    def hammingWeight(self, n: int) -> int:
        # bi = bin(n)
        count = 0
        while n:
            count += 1
            n = (n-1) & n
        return count


# print(0b0100 >> 2)
